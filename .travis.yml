compiler: gcc
sudo: require
dist: xenial

env:
  global:
    - PYBIND11_VERSION="2.2.4"

before_install:
  - sudo apt-add-repository ppa:ubuntu-toolchain-r/test -y
  - sudo apt-add-repository ppa:beineri/opt-qt-5.12.3-xenial -y
  - sudo apt-get update -qq
  - wget https://github.com/pybind/pybind11/archive/v${PYBIND11_VERSION}.tar.gz
  - tar xf v${PYBIND11_VERSION}.tar.gz
  - mv pybind11-${PYBIND11_VERSION} ${HOME}
  - export pybind11_DIR=$HOME/pybind11-${PYBIND11_VERSION}
  
install:
  - sudo apt-get -y install libgl-dev python3-dev libpoppler-qt5-dev g++-8 qt512tools qt512translations qt512svg qt512base qt512imageformats
  - source /opt/qt*/bin/qt*-env.sh # Why does this not work anymore?

script:
  - wget https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tar.xz
  - tar xvf Python-3.7.0.tar.xz
  - cd Python-3.7.0
  - ./configure
  - sudo make altinstall
  - cd -
  - mkdir -p $pybind11_DIR/build && cd $pybind11_DIR/build && cmake .. && sudo make install
  - cd -
  - cmake . -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=g++-8 -DQT_QM_PATH=/opt/qt512/translations -DCMAKE_PREFIX_PATH=/opt/qt512 -DCMAKE_INSTALL_PREFIX=/usr # -DCMAKE_PREFIX_PATH=$pybind11_DIR/build
  - make -j$(nproc)
  # make DESTDIR=appdir -j$(nproc) install ; find appdir/
  # The following should really be done by "make install" rather than by hand
  # https://github.com/jim45002/torrc_util/issues/1#issuecomment-495309220
  - strip torrc_util
  - mkdir -p appdir/usr/bin/torrc_util && cp torrc_util appdir/usr/bin/
  - mkdir -p appdir/usr/share/applications && cp resources/torrc_util.desktop appdir/usr/share/applications/
  - mkdir -p appdir/usr/share/icons/hicolor/256x256/applications && cp resources/darknet.png appdir/usr/share/icons/hicolor/256x256/applications/torrc_util.png
  - wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
  - chmod a+x linuxdeployqt-continuous-x86_64.AppImage
  - ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/*.desktop -appimage

after_success:
  - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
  - bash upload.sh APPNAME*.AppImage*
  
branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)/
